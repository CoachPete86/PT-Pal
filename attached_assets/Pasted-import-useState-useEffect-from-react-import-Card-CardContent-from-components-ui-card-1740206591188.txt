import { useState, useEffect } from 'react';
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Sidebar, SidebarItem } from "@/components/ui/sidebar";
import { Progress } from "@/components/ui/progress";
import { Search, Bell, UserPlus, BarChart, Users, Settings } from "lucide-react";

export default function Dashboard() {
  const [clients, setClients] = useState([]);
  
  useEffect(() => {
    const fetchClients = async () => {
      try {
        const response = await fetch('/api/clients');
        if (!response.ok) throw new Error('Failed to fetch clients');
        const data = await response.json();
        setClients(data);
      } catch (error) {
        console.error('Error fetching clients:', error);
      }
    };
    fetchClients();
  }, []);

  return (
    <div className="flex h-screen bg-gray-100">
      {/* Sidebar */}
      <Sidebar collapsible>
        <SidebarItem icon={BarChart} label="Dashboard" active />
        <SidebarItem icon={Users} label="Clients" />
        <SidebarItem icon={Settings} label="Settings" />
      </Sidebar>

      {/* Main Content */}
      <div className="flex flex-col flex-1 p-6 space-y-4">
        {/* Header */}
        <div className="flex items-center justify-between">
          <h1 className="text-3xl font-bold text-gray-800">Welcome, Trainer ðŸ‘‹</h1>
          <div className="flex space-x-4">
            <button aria-label='Search'><Search className='cursor-pointer' /></button>
            <button aria-label='Notifications'><Bell className='cursor-pointer' /></button>
            <Button className="flex items-center space-x-2" aria-label="Add New Client">
              <UserPlus /> <span>Add Client</span>
            </Button>
          </div>
        </div>

        {/* Stats Section */}
        <div className="grid sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-x-6 gap-y-8">
          <Card className="shadow-lg border border-gray-300"><CardContent><h2 className="text-lg font-semibold">Today's Sessions</h2><p className="text-gray-700 text-xl">0</p></CardContent></Card>
          <Card className="shadow-lg border border-gray-300"><CardContent><h2 className="text-lg font-semibold">Upcoming Sessions</h2><p className="text-gray-700 text-xl">0</p></CardContent></Card>
          <Card className="bg-red-200 shadow-lg border border-gray-300"><CardContent><h2 className="text-lg font-semibold">Payments Due</h2><p className="text-gray-700 text-xl">0</p></CardContent></Card>
          <Card className="bg-yellow-200 shadow-lg border border-gray-300"><CardContent><h2 className="text-lg font-semibold">Expiring Packages</h2><p className="text-gray-700 text-xl">0</p></CardContent></Card>
          <Card className="bg-green-200 shadow-lg border border-gray-300"><CardContent><h2 className="text-lg font-semibold">Active Clients</h2><p className="text-gray-700 text-xl">2</p></CardContent></Card>
        </div>

        {/* Client Management */}
        <div className="bg-white p-6 rounded-lg shadow-lg border border-gray-200">
          <h2 className="text-xl font-bold mb-4">Client Management</h2>
          {clients.length > 0 ? (
            clients.map((client) => (
              <div key={client.id} className="flex justify-between items-center p-3 border-b hover:bg-gray-200 transition rounded-lg">
                <div>
                  <h3 className="text-lg font-medium">{client.name}</h3>
                  <p className="text-gray-600">{client.email}</p>
                  <Progress value={client.progress} />
                </div>
                <Button variant="outline" className="border-gray-600 text-gray-800 hover:bg-gray-300 transition">View Profile</Button>
              </div>
            ))
          ) : (
            <p className="text-gray-600 text-center">No clients found.</p>
          )}
        </div>
      </div>
    </div>
  );
}
